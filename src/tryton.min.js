"use strict";angular.module("openlabs.angular-tryton",["ngStorage"]).config(["$httpProvider",function($httpProvider){var trytonResponseInterceptor=["$q","$rootScope",function($q,$rootScope){function success(response){if(response.data&&response.data.__error__){var error=angular.copy(response.data);return"NotLogged"==error[0]?$rootScope.$broadcast("tryton:NotLogged"):"UserError"==error[0]?$rootScope.$broadcast("tryton:UserError",error[1],error[2]):"UserWarning"==error[0]?$rootScope.$broadcast("tryton:UserWarning",error[1],error[2],error[3]):"ConcurrencyException"==error[0]?$rootScope.$broadcast("tryton:ConcurrencyException",error[1]):$rootScope.$broadcast("tryton:Exception",error),$q.reject(response)}return response||$q.when(response)}function error(response){return $q.reject(response)}return function(promise){return promise.then(success,error)}}];$httpProvider.responseInterceptors.push(trytonResponseInterceptor);var trytonResponseTransformer=function(response){if(response.hasOwnProperty("result"))return angular.forEach(response.result,function(value,key){var field=response.result[key];field&&field.hasOwnProperty("__class__")&&"buffer"===field.__class__&&(response.result[key]=field.base64)}),response.result;if(response.hasOwnProperty("error")){var error=response.error;return error.__error__=!0,error}return response};$httpProvider.defaults.transformResponse.push(trytonResponseTransformer)}]).service("tryton",["$http","$rootScope","$localStorage",function($http,$rootScope,$localStorage){var tryton=this;this.serverUrl=$localStorage.serverUrl||"/",$rootScope.$watch(function(){return tryton.serverUrl},function(url){$localStorage.serverUrl=url}),this.setServerUrl=function(url){console.warn("Method tryton.setServerUrl() will be depreciated in next version."),tryton.serverUrl=url},this.rpc=function(method,params,database,cache){var request=$http.post(tryton.serverUrl+(database||""),{method:method,params:params||[],cache:cache});return request},this.getServerVersion=function(){return tryton.rpc("common.version",[null,null])}}]).service("session",["tryton","$localStorage","$sessionStorage",function(tryton,$localStorage,$sessionStorage){var session=this;this.userId=null,this.sessionId=null,this.database=null,this.login=null,session.context=null,session.loadAllFromStorage=function(){session.userId=$localStorage.userId,session.sessionId=$sessionStorage.sessionId,session.database=$localStorage.database,session.login=$localStorage.login,session.context=$sessionStorage.context},session.loadAllFromStorage();var clearSession=function(){session.userId=null,session.sessionId=null,session.context=null,delete $localStorage.userId,delete $sessionStorage.sessionId,delete $sessionStorage.context};this.setSession=function(_database,_login,_userId,_sessionId){$localStorage.database=_database||null,$localStorage.login=_login||null,$localStorage.userId=_userId||null,$sessionStorage.sessionId=_sessionId||null,session.loadAllFromStorage()},this.rpc=function(_method,_params,_context,cache){var params=[session.userId,session.sessionId].concat(_params||[]);cache=cache||!1;var requestContext=angular.copy(session.context||{});return void 0!==_context&&angular.extend(requestContext,_context),params.push(requestContext),tryton.rpc(_method,params,session.database,cache)},this.doLogout=function(){var promise=session.rpc("common.db.logout");return clearSession(),promise},this.setDefaultContext=function(_context){$sessionStorage.context=_context||null,session.loadAllFromStorage()},this.doLogin=function(_database,_username,_password){var promise=tryton.rpc("common.login",[_username,_password],_database).success(function(result){result instanceof Array&&session.setSession(_database,_username,result[0],result[1])});return promise},this.isLoggedIn=function(){return!!session.sessionId}}]).filter("urlTryton",function($window,tryton,session){return function(name,id,type_){if(type_=type_||"model",!name)throw new Error("Name in urlTryton filter is required.");var values=[],serverUrl=tryton.serverUrl;return serverUrl=/^[\w]+:\/\//.test(serverUrl)?serverUrl.substring(serverUrl.indexOf(":")):"://"+window.location.host+serverUrl,values.push(serverUrl+session.database),values.push(type_),values.push(name),id&&values.push(id),"tryton"+values.join("/")}});